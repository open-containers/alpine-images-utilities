name: build-push-sign-alpine-gitlab-runner

on:
  schedule:
    # Runs daily at 8 AM CST (14:00 UTC)
    - cron: "0 14 * * *"
  workflow_dispatch:

jobs:
  build-push-openssl-fips:
    env:
      REGISTRY: ghcr.io
      ORG: open-containers
      IMAGE: openssl-fips
      TAG: "v3.0.9"
      BUILD_OS: alpine:3.21
      OPENSSL_VERSION: 3.0.9
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: write
      id-token: write
    steps:
      # Checkout the repository (Ensure all files are available)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history
          lfs: true        # Ensure Large File Storage (LFS) files are included

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Cosign for signing images
      - name: Set up cosign
        uses: sigstore/cosign-installer@v3

      # Set up Docker Buildx for enhanced builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push the OpenSSL-FIPS image
      - name: Build and push OpenSSL-FIPS container image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .  # Set to the root of the repo to include all files
          file: alpine-gitlab-runner/Dockerfile  # Specify the correct Dockerfile path
          push: true
          build-args: |
            BUILD_OS=${{ env.BUILD_OS }}
            OPENSSL_VERSION=${{ env.OPENSSL_VERSION }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE }}:${{ env.TAG }}
          sbom: true
          provenance: mode=max

      # Sign the container image with Cosign
      - name: Sign container image
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE }}@${{ steps.docker_build.outputs.digest }} --yes
          
